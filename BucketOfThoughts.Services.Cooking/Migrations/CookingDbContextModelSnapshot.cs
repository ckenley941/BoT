// <auto-generated />
using System;
using BucketOfThoughts.Services.Thoughts.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BucketOfThoughts.Services.Cooking.Migrations
{
    [DbContext(typeof(CookingDbContext))]
    partial class CookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CookTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("CuisineType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ModifiedDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PrepTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Protein")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ServeWith")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Serves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Recipe", (string)null);
                });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Measurement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("ModifiedDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredient", (string)null);
                });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.RecipeInstruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ModifiedDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(3);

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("StepNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeInstruction", (string)null);
                });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.RecipeNote", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("NoteId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2);

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("ModifiedDateTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(3);

                    b.HasKey("RecipeId", "NoteId");

                    b.ToTable("RecipeNote", (string)null);
                });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.RecipeWebsiteLink", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteLinkId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "WebsiteLinkId");

                    b.ToTable("RecipeWebsiteLink", (string)null);
                });

            //modelBuilder.Entity("BucketOfThoughts.Services.Shared.Data.Note", b =>
            //    {
            //        b.Property<int>("Id")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("int")
            //            .HasColumnOrder(1);

            //        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            //        b.Property<DateTimeOffset>("CreatedDateTime")
            //            .HasColumnType("datetimeoffset")
            //            .HasColumnOrder(2);

            //        b.Property<string>("Description")
            //            .IsRequired()
            //            .HasColumnType("nvarchar(max)");

            //        b.Property<DateTimeOffset?>("ModifiedDateTime")
            //            .HasColumnType("datetimeoffset")
            //            .HasColumnOrder(3);

            //        b.HasKey("Id");

            //        b.ToTable("Notes");
            //    });

            //modelBuilder.Entity("BucketOfThoughts.Services.Shared.Data.WebsiteLink", b =>
            //    {
            //        b.Property<int>("Id")
            //            .ValueGeneratedOnAdd()
            //            .HasColumnType("int")
            //            .HasColumnOrder(1);

            //        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

            //        b.Property<DateTimeOffset>("CreatedDateTime")
            //            .HasColumnType("datetimeoffset")
            //            .HasColumnOrder(2);

            //        b.Property<DateTimeOffset?>("ModifiedDateTime")
            //            .HasColumnType("datetimeoffset")
            //            .HasColumnOrder(3);

            //        b.Property<int?>("SortOrder")
            //            .HasColumnType("int");

            //        b.Property<string>("WebsiteDesc")
            //            .HasColumnType("nvarchar(max)");

            //        b.Property<string>("WebsiteUrl")
            //            .IsRequired()
            //            .HasColumnType("nvarchar(max)");

            //        b.HasKey("Id");

            //        b.ToTable("WebsiteLinks");
            //    });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.RecipeIngredient", b =>
                {
                    b.HasOne("BucketOfThoughts.Services.Cooking.Data.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK_RecipeIngredient_Recipe");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.RecipeInstruction", b =>
                {
                    b.HasOne("BucketOfThoughts.Services.Cooking.Data.Recipe", "Recipe")
                        .WithMany("RecipeInstructons")
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK_RecipeInstruction_Recipe");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.RecipeNote", b =>
                {
                    b.HasOne("BucketOfThoughts.Services.Cooking.Data.Recipe", "Recipe")
                        .WithMany("RecipeNotes")
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK_Note_Recipe");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.RecipeWebsiteLink", b =>
                {
                    b.HasOne("BucketOfThoughts.Services.Cooking.Data.Recipe", "Recipe")
                        .WithMany("RecipeWebsiteLinks")
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK_RecipeWebsiteLink_Recipe");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("BucketOfThoughts.Services.Cooking.Data.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");

                    b.Navigation("RecipeInstructons");

                    b.Navigation("RecipeNotes");

                    b.Navigation("RecipeWebsiteLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
